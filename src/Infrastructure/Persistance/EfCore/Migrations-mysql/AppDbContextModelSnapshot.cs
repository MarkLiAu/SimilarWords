// <auto-generated />
using System;
using Infrastructure.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Persistance.EfCore.Migrationsmysql
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ApplicationCore.WordStudy.Word", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Example")
                        .HasColumnType("longtext");

                    b.Property<string>("ExampleSoundUrl")
                        .HasColumnType("longtext");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MeaningLong")
                        .HasColumnType("longtext");

                    b.Property<string>("MeaningShort")
                        .HasColumnType("longtext");

                    b.Property<string>("Pronunciation")
                        .HasColumnType("longtext");

                    b.Property<string>("PronunciationAm")
                        .HasColumnType("longtext");

                    b.Property<string>("SimilarWords")
                        .HasColumnType("longtext");

                    b.Property<string>("SoundUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("Name");

                    b.ToTable("Words", (string)null);
                });

            modelBuilder.Entity("ApplicationCore.WordStudy.WordStudyModel", b =>
                {
                    b.Property<string>("UserName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("WordName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("DaysToStudy")
                        .HasColumnType("int");

                    b.Property<string>("DaysToStudyHistory")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastStudyTimeUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartTimeUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("StudyCount")
                        .HasColumnType("int");

                    b.HasKey("UserName", "WordName");

                    b.HasIndex("WordName");

                    b.ToTable("WordStudies", (string)null);
                });

            modelBuilder.Entity("ApplicationCore.WordStudy.WordStudyModel", b =>
                {
                    b.HasOne("ApplicationCore.WordStudy.Word", "Word")
                        .WithMany()
                        .HasForeignKey("WordName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Word");
                });
#pragma warning restore 612, 618
        }
    }
}
